---
- hosts: TEST
  become: true
  tasks:

  - name: Update dhcpcd configuration
    lineinfile:
      path: /etc/dhcpcd.conf
      regexp: "^(#)?{{ item.regexp }}"
      line: "{{ item.line }}"
      backup: yes
      state: present
    with_items:
      - { regexp: "interface eth0", line: "interface eth0" }
      - { regexp: "static ip_address= 192.168.1.23/24", line: "static ip_address={{ ansible_host }}/24" }
      - { regexp: "static routers=192.168.1.1", line: "static routers=192.168.1.254" }
      - { regexp: "static domain_name_servers=192.168.1.1", line: "static domain_name_servers=1.1.1.1" }
    notify: restart dhcpcd

  - name: Update apt repo and cache on all Debian/Ubuntu boxes
    apt:
      update_cache=yes
      force_apt_get=yes
      cache_valid_time=3600

  - name: Upgrade all packages on servers
    apt:
      upgrade=dist
      force_apt_get=yes

  - name: Check if a reboot is needed on all servers
    register: reboot_required_file
    stat: path=/var/run/reboot-required get_md5=no

  - name: Reboot the box if kernel updated
    reboot:
      msg: "Reboot initiated by Ansible for kernel updates"
      connect_timeout: 5
      reboot_timeout: 300
      pre_reboot_delay: 0
      post_reboot_delay: 30
      test_command: uptime
    when: reboot_required_file.stat.exists

  - name: create user ansible
    tags: always
    user:
      name: ansible
      groups: root

  - name: add ssh key for ansible
    tags: always
    authorized_key:
      user: ansible
      key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOJY7+v8Un9/DE9eRJxczPaW5FVLkQFaYxCwQwYa7QKD LINUX" 

  - name: add sudoers file for ansible
    tags: always
    copy:
      src: ~/ansible/Project_1/files/sudo_ansible
      dest: /etc/sudoers.d/ansible
      owner: root
      group: root
      mode: 440
  
  handlers:
  - name: restart dhcpcd
    service:
      name: dhcpcd
      state: restarted
