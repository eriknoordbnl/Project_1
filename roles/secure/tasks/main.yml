# Unattended upgrades
- name: Install unattended upgrades package.
  apt:
    name: unattended-upgrades
    state: latest
    update-cache: yes
- block:
    - name: Get Properties Unattended-upgrades
      stat:
        path: ~/files/unattended-upgrades
        checksum_algorithm: sha1
      register: src_info
    - name: Copy Unattended source to destination
      copy:
        src: ~/ansible/Project_1/roles/secure/files/50unattended-upgrades        
        dest: /etc/apt/apt.conf.d/50unattended-upgrades
        force: yes
        backup: yes
        checksum:
      register: copy_out

# UFW
- name : Install UFW
  apt:
    name: ufw
    state: latest
    update_cache: yes
  register: ufw

- name: Flush UFW
  ufw:
    state: reset
  when: ufw.changed

- name: Add Standard Policy
  ufw:
    direction: "{{ item.direction }}"
    default: "{{ item.default }}"
  with_items:
    - { direction: "incoming", default: "deny" }
    - { direction: "outgoing", default: "allow" }
- name: Add UFW rules with direction
  ufw:
    rule: "{{ item.rule }}"
    direction: "{{ item.dir }}"
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
    comment: "{{ item.com }}"
  with_items:
    - { rule: limit, dir: in, port: "{{ ssh_port }}", proto: tcp, com: "SSH in" }
    - { rule: allow, dir: out, port: "{{ ssh_port }}", proto: tcp, com: "SSH out" }
- name: Add UFW rules without direction
  ufw:
    rule: "{{ item.rule }}"
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
    comment: "{{ item.com }}"
  with_items:
    - { rule: allow, port: "{{ http_port }}", proto: tcp, com: "HTTP" }
    - { rule: allow, port: "{{ https_port }}", proto: tcp, com: "HTTPS" }
    - { rule: allow, port: "{{ dns_port }}", proto: udp, com: "DNS" }
    - { rule: allow, port: "{{ wireguard_port }}", proto: udp, com: "Wireguard VPN" }
#    - { rule: allow, port: "{{ domoticz_port }}", proto: tcp, com: "DOMOTICZ" } when $SERVER = DOMO
- name: Enable UFW and Logging
  ufw:
    state: "enabled"
    logging: "on"

# Secure SSH
- name: Update SSH configuration to be more secure
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^(#)?{{ item.regexp }}"
    line: "{{ item.line }}"
    backup: yes
    state: present
  with_items:
    - { regexp: "PasswordAuthentication", line: "{{ PasswordAuthentication }}" }
    - { regexp: "PermitRootLogin", line: "{{ PermitRootLogin }}" }
    - { regexp: "Port", line: "{{ Port }}" }
    - { regexp: "PermitEmptyPasswords", line: "{{ PermitEmptyPasswords }}" }
  notify: restart sshd

